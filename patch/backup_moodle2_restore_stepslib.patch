--- /datas/dev/moodle/moodle_gitworkspaces/moodle39/moodle_org/backup/moodle2/restore_stepslib.php	2021-05-10 15:11:46.982242943 +0200
+++ /datas/dev/moodle/moodle_gitworkspaces/moodle39/moodle2_version/backup/moodle2/restore_stepslib.php	2021-05-10 17:02:45.402700232 +0200
@@ -5124,7 +5126,10 @@
      * What to do when this step is executed.
      */
     protected function define_execution() {
-        global $DB;
+        // UNISTRA DEV.
+        global $DB, $CFG;
+        require_once($CFG->dirroot.'/blocks/my_external_backup_restore_courses/locallib.php');
+        //END UNISTRA DEV
 
         $this->log('processing file aliases queue', backup::LOG_DEBUG);
 
@@ -5248,7 +5253,9 @@
                 // This is a reference to some external file such as in boxnet or dropbox.
                 // If we are restoring to the same site, keep the reference untouched and
                 // restore the alias as is.
-                if ($this->task->is_samesite()) {
+                // UNISTRA DEV.
+                if ($this->task->is_samesite() or block_my_external_backup_restore_courses_tools::is_repository_authorized_to_restore($info->oldfile->repositorytype)) {
+                //End UNISTRA DEV
                     $fs->create_file_from_reference($info->newfile, $repository->id, $info->oldfile->reference);
                     $this->notify_success($info);
                     continue;
@@ -5277,6 +5284,9 @@
     private function choose_repository(stdClass $info) {
         global $DB, $CFG;
         require_once($CFG->dirroot.'/repository/lib.php');
+        // UNISTRA DEV.
+        require_once($CFG->dirroot.'/blocks/my_external_backup_restore_courses/locallib.php');
+        //END UNISTRA DEV
 
         if ($this->task->is_samesite()) {
             // We can rely on repository instance id.
@@ -5310,7 +5320,9 @@
 
             // Both Server files and Legacy course files repositories have a single
             // instance at the system context to use. Let us try to find it.
-            if ($info->oldfile->repositorytype === 'local' or $info->oldfile->repositorytype === 'coursefiles') {
+            // UNISTRA DEV.
+            if ($info->oldfile->repositorytype === 'local' or $info->oldfile->repositorytype === 'coursefiles' or block_my_external_backup_restore_courses_tools::is_repository_authorized_to_restore($info->oldfile->repositorytype)) {
+            // END UNISTRA DEV.
                 $sql = "SELECT ri.id
                           FROM {repository} r
                           JOIN {repository_instances} ri ON ri.typeid = r.id
@@ -5328,8 +5340,11 @@
                     $this->cachereposbytype[$info->oldfile->repositorytype] = null;
                     return null;
                 }
+            // UNISTRA DEV.
+            } else if (!block_my_external_backup_restore_courses_tools::is_repository_authorized_to_restore($info->oldfile->repositorytype)){
+                $this->notify_failure($info, 'remote repository not authorized for type '.$info->oldfile->repositorytype);
             }
-
+            //End UNISTRA DEV
             $this->cachereposbytype[$info->oldfile->repositorytype] = null;
             return null;
         }
